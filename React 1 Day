import {useState} from 'react';
const App=()=>{   
    function InputBox(props) {
        let [cValue, setValue] = useState("");
        const setInputData = function (e) {
            // console.log(e.target.value);
            setValue(e.target.value);
        }
        const addTask = function () {
            console.log("currentTask: " + cValue);
            props.parentGetTask(cValue);
        }
        // input manages the visible data but
        // react treats it as a bad practice -> 
        // you should always do the ui changes 
        // with state variable
        // controlled component
        return (<div>
            <input type="text"
                value={cValue}
                onChange={setInputData}
            />
            <button onClick={addTask} >Add Task</button>
        </div>)
    }




    
    function ListItems(props) {
        // data -> html convert (array data)-> map
        let tasks = props.tasks;
        return (
            <ul>
                {
                    tasks.map(function (task ,idx) {
                        return <li key={idx}>{task}</li>
                    })
                }
            </ul>)
    }
    // t->0
    function Todo() {
        // lifting the state up 
        let [tasks, updatetasks] = useState([]);
        const getTask = (currentTask) => {
            console.log("in Todo component" + currentTask);
            // 1.spread operator-> 1 level deep copy
            let newTasksArr = [...tasks];
            newTasksArr.push(currentTask);
            // state ka variable change 
            updatetasks(newTasksArr);

            // 2.
            // let newTasksArr = [];
            // for (let i = 0; i < tasks.length; i++) {
            //     newTasksArr.push(arr[i]);
            // }
        }
        // components -> render with new props 
        return <div>
            <h1> Todo App </h1>
            <InputBox parentGetTask={getTask}></InputBox>
            <ListItems tasks={tasks}></ListItems>
        </div>
    }
}
export default App;



